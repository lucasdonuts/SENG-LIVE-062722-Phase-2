{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Development/code/phase-2/SENG-LIVE-062722-Phase-2/06_PATCH_DELETE/project_showcase/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport ProjectList from \"./components/ProjectList\";\nimport ProjectEditForm from \"./components/ProjectEditForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [projects, setProjects] = useState([]);\n  const [projectToEdit, setProjectToEdit] = useState(null);\n  const [selectedPhase, setSelectedPhase] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    let url;\n\n    if (selectedPhase && searchQuery) {\n      url = `http://localhost:4000/projects?phase=${selectedPhase}&q=${encodeURI(searchQuery)}`;\n    } else if (searchQuery) {\n      url = `http://localhost:4000/projects?q=${encodeURI(searchQuery)}`;\n    } else if (selectedPhase) {\n      url = `http://localhost:4000/projects?phase=${selectedPhase}`;\n    } else {\n      url = \"http://localhost:4000/projects\";\n    }\n\n    fetch(url).then(res => res.json()).then(projects => setProjects(projects));\n  }, [selectedPhase, searchQuery]);\n\n  const onToggleDarkMode = () => {\n    setIsDarkMode(isDarkMode => !isDarkMode);\n  };\n\n  const onAddProject = newProj => {\n    setProjects(projects => [...projects, newProj]);\n  };\n\n  const onCompleteEditing = () => {\n    setProjectToEdit(null);\n  };\n\n  const onProjectEdit = projectToEdit => {\n    setProjectToEdit(projectToEdit);\n  };\n\n  const renderForm = () => {\n    if (projectToEdit) {\n      return /*#__PURE__*/_jsxDEV(ProjectEditForm, {\n        projectToEdit: projectToEdit,\n        onCompleteEditing: onCompleteEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ProjectForm, {\n        onAddProject: onAddProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDarkMode ? \"App\" : \"App light\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      onToggleDarkMode: onToggleDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), renderForm(), /*#__PURE__*/_jsxDEV(ProjectList, {\n      projects: projects,\n      onProjectEdit: onProjectEdit,\n      setSelectedPhase: setSelectedPhase,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"CcYkZ/JDxuTaPWnbXCBgmRrbBv4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lucas/Development/code/phase-2/SENG-LIVE-062722-Phase-2/06_PATCH_DELETE/project_showcase/src/App.js"],"names":["useEffect","useState","Header","ProjectForm","ProjectList","ProjectEditForm","App","isDarkMode","setIsDarkMode","projects","setProjects","projectToEdit","setProjectToEdit","selectedPhase","setSelectedPhase","searchQuery","setSearchQuery","url","encodeURI","fetch","then","res","json","onToggleDarkMode","onAddProject","newProj","onCompleteEditing","onProjectEdit","renderForm"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport ProjectList from \"./components/ProjectList\";\nimport ProjectEditForm from \"./components/ProjectEditForm\";\n\nconst App = () => {\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [projects, setProjects] = useState([]);\n  const [projectToEdit, setProjectToEdit] = useState(null);\n  const [selectedPhase, setSelectedPhase] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    let url;\n    if (selectedPhase && searchQuery) {\n      url = `http://localhost:4000/projects?phase=${selectedPhase}&q=${encodeURI(searchQuery)}`;\n    } else if (searchQuery) {\n      url = `http://localhost:4000/projects?q=${encodeURI(searchQuery)}`;\n    } else if (selectedPhase) {\n      url = `http://localhost:4000/projects?phase=${selectedPhase}`;\n    } else {\n      url = \"http://localhost:4000/projects\";\n    }\n    fetch(url)\n      .then((res) => res.json())\n      .then((projects) => setProjects(projects));\n  }, [selectedPhase, searchQuery])\n\n  const onToggleDarkMode = () => {\n    setIsDarkMode((isDarkMode) => !isDarkMode);\n  };\n\n  const onAddProject = (newProj) => {\n    setProjects((projects) => [...projects, newProj]);\n  };\n\n  const onCompleteEditing = () => {\n    setProjectToEdit(null);\n  };\n\n  const onProjectEdit = (projectToEdit) => {\n    setProjectToEdit(projectToEdit);\n  };\n\n  const renderForm = () => {\n    if (projectToEdit) {\n      return (\n        <ProjectEditForm\n          projectToEdit={projectToEdit}\n          onCompleteEditing={onCompleteEditing}\n        />\n      );\n    } else {\n      return <ProjectForm onAddProject={onAddProject} />;\n    }\n  };\n\n  return (\n    <div className={isDarkMode ? \"App\" : \"App light\"}>\n      <Header isDarkMode={isDarkMode} onToggleDarkMode={onToggleDarkMode} />\n      {renderForm()}\n      <ProjectList\n        projects={projects}\n        onProjectEdit={onProjectEdit}\n        setSelectedPhase={setSelectedPhase}\n        setSearchQuery={setSearchQuery}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}